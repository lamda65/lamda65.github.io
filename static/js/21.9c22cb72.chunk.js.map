{"version":3,"sources":["../node_modules/@material-ui/core/esm/Container/Container.js","modules/delivery/components/FoodItem/index.js","modules/delivery/views/listDeliverySeeAll/listDeliverySeeAll.view.js","modules/delivery/views/listDeliverySeeAll/listDeliverySeeAll.container.js"],"names":["Container","React","props","ref","classes","className","_props$component","component","Component","_props$disableGutters","disableGutters","_props$fixed","fixed","_props$maxWidth","maxWidth","other","_objectWithoutProperties","_extends","clsx","root","concat","capitalize","String","withStyles","theme","_defineProperty","width","marginLeft","boxSizing","marginRight","paddingLeft","spacing","paddingRight","display","breakpoints","up","Object","keys","values","reduce","acc","breakpoint","value","maxWidthXs","Math","max","xs","maxWidthSm","sm","maxWidthMd","md","maxWidthLg","lg","maxWidthXl","xl","name","FoodItem","item","history","useHistory","src","image_urls","length","style","objectFit","alt","merchant","image_url","price","convertCurrency","title","icon","customTitle","onClick","push","id","ListDeliverySeeAllView","menuType","addListSelectedHandle","onVisibleSelected","updateListSelectedHandle","Grid","container","direction","items","url","state","customStyle","marginTop","listMenu","data","map","el","total","onSeeMoreClick","memo","connect","listSelected","getListSelectedSelector","dispatch","bindActionCreators","useDispatch","location","useState","page","size","listData","setListData","accessToken","useSelector","getAccessTokenSelector","isSuccess","isVisibleSelected","thisState","setThisState","useEffect","getListFoodsDeliveryHandle","delivery_group","group","is_delivery","merchant_id","obj","tempListData","menu","console","log","onBookingClick","addModal","type","MODAL_TYPE","MODAL_BOOKING_FOOD","order","FORCE_USER_LOGIN","getListFoodsMenuHandle"],"mappings":"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","file":"static/js/21.9c22cb72.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _defineProperty({\n      width: '100%',\n      marginLeft: 'auto',\n      boxSizing: 'border-box',\n      marginRight: 'auto',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      display: 'block'\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `disableGutters={true}`. */\n    disableGutters: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n\n    /* Styles applied to the root element if `fixed={true}`. */\n    fixed: Object.keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      var value = theme.breakpoints.values[breakpoint];\n\n      if (value !== 0) {\n        acc[theme.breakpoints.up(breakpoint)] = {\n          maxWidth: value\n        };\n      }\n\n      return acc;\n    }, {}),\n\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n    maxWidthXs: _defineProperty({}, theme.breakpoints.up('xs'), {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n    maxWidthSm: _defineProperty({}, theme.breakpoints.up('sm'), {\n      maxWidth: theme.breakpoints.values.sm\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\n    maxWidthMd: _defineProperty({}, theme.breakpoints.up('md'), {\n      maxWidth: theme.breakpoints.values.md\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n    maxWidthLg: _defineProperty({}, theme.breakpoints.up('lg'), {\n      maxWidth: theme.breakpoints.values.lg\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n    maxWidthXl: _defineProperty({}, theme.breakpoints.up('xl'), {\n      maxWidth: theme.breakpoints.values.xl\n    })\n  };\n};\nvar Container = /*#__PURE__*/React.forwardRef(function Container(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes[\"maxWidth\".concat(capitalize(String(maxWidth)))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);","import React from 'react';\nimport './FoodItem.scss';\nimport { ButtonCustom } from 'src/components/base';\nimport { CartIconWhite, SymbolCurrencyIcon } from 'src/assets/icons';\nimport { Grid } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport { convertCurrency } from 'src/utils/currency';\n\nconst FoodItem = (props) => {\n  const { item = {} } = props;\n  const history = useHistory();\n  return (\n    <Grid item xl={4} lg={4} md={6} sm={6} xs={12}>\n      <div className=\"food-item-container\">\n        <div className=\"image-section\">\n          <div className=\"box-img\">\n            <img\n              src={\n                item.image_urls &&\n                item.image_urls.length > 0 &&\n                item.image_urls[0]\n              }\n              style={{ objectFit: 'cover' }}\n              alt=\"order-detail\"\n            />\n            <img src={item?.merchant?.image_url} alt=\"logo\" className=\"logo\" />\n          </div>\n        </div>\n\n        <div className=\"content-section\">\n          <p className=\"eVoucher-name\">{item.name}</p>\n\n          <div className=\"bottom-section\">\n            <div className=\"bottom-left\">\n              <div className=\"bottom-left\">\n                {!!item.price && (\n                  <div className=\"price-section\">\n                    <SymbolCurrencyIcon />\n                    <p className=\"price\">{convertCurrency(item.price)}đ</p>\n                  </div>\n                )}\n              </div>\n            </div>\n            <div className=\"bottom-right\">\n              <ButtonCustom\n                title=\"Chọn\"\n                icon={<CartIconWhite />}\n                customTitle=\"customTitle\"\n                onClick={() => {\n                  history.push(`/delivery/${item.id}`);\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Grid>\n  );\n};\n\nexport default FoodItem;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport { Grid, Container } from '@material-ui/core';\n\nimport { TitleCustom, Breadcrumb, ButtonCustom } from 'src/components/base';\n\nimport './listDeliverySeeAll.scss';\nimport FoodItem from '../../components/FoodItem';\n\nconst ListDeliverySeeAllView = (props) => {\n  const {\n    merchant,\n    menuType,\n    addListSelectedHandle,\n    onVisibleSelected,\n    updateListSelectedHandle,\n  } = props;\n\n  return (\n    <Grid container direction=\"column\" className=\"voucher-container\">\n      {/* <---E-Voucher-Section---> */}\n      <Breadcrumb\n        items={[\n          { name: 'Delivery', url: '/delivery' },\n          {\n            name: merchant.name,\n            url: `/delivery/merchant/${merchant.id}`,\n            state: { merchant },\n          },\n          {\n            name: menuType?.name,\n            url: `/delivery/see-all/${menuType?.id}`,\n            state: {\n              merchant,\n              menuType,\n            },\n          },\n        ]}\n      />\n      {/* <Grid container lg={12} md={12} justifyContent=\"center\">\n        <Slider onClickSlider={() => {}} data={props.listBanner} />\n      </Grid> */}\n      <Container maxWidth=\"lg\">\n        <TitleCustom title={merchant.name} customStyle=\"title-header\" />\n      </Container>\n      <Container maxWidth=\"lg\">\n        <Grid\n          container\n          spacing={3}\n          direction=\"row\"\n          style={{ marginTop: '32px' }}\n        >\n          {props.listMenu?.data?.map((el) => (\n            <FoodItem\n              addListSelectedHandle={addListSelectedHandle}\n              onVisibleSelected={onVisibleSelected}\n              merchant={merchant}\n              item={el}\n              updateListSelectedHandle={updateListSelectedHandle}\n            />\n          ))}\n        </Grid>\n        {props.listMenu?.data.length < props.listMenu?.total && (\n          <Grid container className=\"box-button\">\n            <ButtonCustom\n              onClick={props.onSeeMoreClick}\n              item\n              title=\"XEM THÊM\"\n              customStyle=\"custom-button\"\n            />\n          </Grid>\n        )}\n      </Container>\n    </Grid>\n  );\n};\n\nexport default React.memo(ListDeliverySeeAllView);\n","/* eslint-disable no-plusplus */\nimport React, { useEffect, useState } from 'react';\n// import { useDispatch } from 'react-redux';\n// import { getListVoucherByTypeHandle } from 'src/redux/actions/voucher.action';\nimport { connect, useSelector, useDispatch } from 'react-redux';\nimport { getListSelectedSelector } from 'src/redux/selectors/order.selector';\nimport { getAccessTokenSelector } from 'src/redux/selectors/auth';\nimport { addModal } from 'src/redux/actions/ui.action';\nimport { bindActionCreators } from 'redux';\nimport {\n  addListSelectedHandle,\n  getListFoodsMenuHandle,\n  updateListSelectedHandle,\n} from 'src/redux/actions/order.action';\nimport { getListFoodsDeliveryHandle } from 'src/redux/actions/delivery.action';\n\nimport { MODAL_TYPE } from 'src/constants';\nimport ListOrderView from './listDeliverySeeAll.view';\n\nconst ListDeliverySeeAllContainer = (props) => {\n  const dispatch = useDispatch();\n  const merchant = props?.location?.state?.merchant || {};\n  const menuType = props?.location?.state?.menuType || {};\n  const [listData, setListData] = useState({ page: 1, size: 12, data: [] });\n  const accessToken = useSelector(getAccessTokenSelector);\n  const [thisState, setThisState] = useState({\n    isSuccess: false,\n    isVisibleSelected: false,\n  });\n  const onVisibleSelected = () => {\n    setThisState({\n      ...thisState,\n      isVisibleSelected: true,\n    });\n  };\n\n  const onBookingClick = () => {\n    if (accessToken) {\n      dispatch(\n        addModal({\n          type: MODAL_TYPE.MODAL_BOOKING_FOOD,\n          order: props.listSelected,\n        })\n      );\n    } else {\n      dispatch(\n        addModal({\n          type: MODAL_TYPE.FORCE_USER_LOGIN,\n          order: props.listSelected,\n        })\n      );\n    }\n  };\n  // const [listData, setListData] = useState({\n  //   data: [],\n  //   page: 1,\n  //   size: 9,\n  //   total: 0,\n  // });\n  // const dispatch = useDispatch();\n  useEffect(() => {\n    // const branch = props?.location?.state?.branch || {};\n    if (merchant?.id) {\n      dispatch(\n        getListFoodsDeliveryHandle(\n          listData.page,\n          listData.size,\n          {\n            delivery_group: menuType.group,\n            is_delivery: true,\n            merchant_id: merchant.id,\n          },\n          (obj) => {\n            const tempListData = {\n              ...listData,\n              data: obj.menu,\n              total: obj.total,\n            };\n\n            setListData(tempListData);\n          }\n        )\n      );\n    }\n  }, []);\n  console.log('branch', merchant, props);\n\n  return (\n    <ListOrderView\n      merchant={merchant}\n      menuType={menuType}\n      onVisibleSelected={onVisibleSelected}\n      onBookingClick={onBookingClick}\n      thisState={thisState}\n      listMenu={listData}\n      listSelected={props.listSelected}\n      {...props}\n      onSeeMoreClick={() => {\n        if (merchant?.id) {\n          dispatch(\n            getListFoodsMenuHandle(\n              listData.page + 1,\n              listData.size,\n              {\n                delivery_group: menuType.group,\n                is_delivery: true,\n                merchant_id: merchant.id,\n              },\n              (obj) => {\n                const tempListData = {\n                  ...listData,\n                  data: listData.data.concat(obj.menu),\n                  total: obj.total,\n                };\n\n                setListData(tempListData);\n              }\n            )\n          );\n        }\n      }}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  listSelected: getListSelectedSelector(state),\n});\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    { addListSelectedHandle, updateListSelectedHandle },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ListDeliverySeeAllContainer);\n"],"sourceRoot":""}