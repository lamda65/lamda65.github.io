{"version":3,"sources":["modules/user/constant/index.js","modules/user/components/Tabs/UserInfoTab/config.js","modules/user/components/Tabs/UserInfoTab/UserInfoTab.js","modules/user/components/Tabs/UserInfoTab/index.js","modules/user/components/Tabs/TermsTab.js","modules/user/components/Tabs/PolicyTab.js","modules/user/components/Tabs/ContactTab/ContactTab.js","modules/user/payModal/payModal.container.js","modules/user/components/Tabs/MoneyTab.js","modules/user/components/Tabs/Tabs.js","modules/user/components/Tabs/index.js","modules/user/views/UserInfo.view.js","components/base/layout/payByPoint/styles.js","components/base/layout/payByPoint/index.js","modules/user/payModal/payModal.view.js","modules/user/views/UserInfo.container.js","modules/user/index.js"],"names":["USE_TERMS_DATA","POLICY_DATA","CONTACT_MY_HOME","TERM_AND_CONDITION","POLICY_MY_HOME","COMPLAIN_MY_HOME","updateInfoFormConfig","name","key","type","props","required","label","className","readOnly","updateInfoValidateSchema","Yup","shape","email","updatePasswordSchema","oldPassword","newPassword","confirmPassword","oneOf","FORM_TYPE","LABEL_MAP","phone_number","birth_day","identity_card","address","UserInfoTabs","userInfo","dispatch","useDispatch","useState","formType","setFormType","changePasswordErrorMessage","setChangePasswordErrorMessage","style","width","display","flexDirection","justifyContent","onClick","FormBuilder","configForm","configValidate","initialValues","avatar","image_url","onSubmit","values","tempUserInfo","dob","id_number","updateUserInfoHandle","InfoShow","onChangePasswordClick","editInfo","validateOnChange","validateOnBlur","changePasswordHandle","old_password","new_password","re_password","error","response","data","message","validationSchema","handleSubmit","setFieldValue","errors","marginBottom","Grid","alignItems","container","spacing","item","xl","lg","md","sm","xs","onChange","e","target","value","React","memo","handleClick","useCallback","evt","preventDefault","renderInfo","Object","keys","map","src","icon","title","UserInfoTab","TermsTab","source","PolicyTab","ContactTab","listFaqSection","setListFaqSection","useEffect","getListFAQHandle","listFaqSectionRes","size","obj","index","tempListFAQSection","slice","expanded","question","color","answer","PayModalView","require","default","PayModalContainer","vouchers","useSelector","getVouchersCartSelector","accessToken","getAccessTokenSelector","history","useHistory","promotionCode","setPromotionCode","tempTotalMoneyVoucher","setTempTotalMoneyVoucher","totalMoneyVoucher","setTotalMoneyVoucher","discountMoneyVoucher","setDiscountMoneyVoucher","modalType","setModalType","paymentType","setPaymentType","errorMessagePaymentPointVoucher","setErrorMessagePaymentPointVoucher","useModal","Modal","show","hide","temporaryMoney","reduce","total","current","regular_price","quantity","totalMoney","onCountChange","deal","voucherIndex","findIndex","id","tempVouchers","updateListVoucherInCart","onDeleteClick","filter","length","goBack","onForceLoginClick","addModal","MODAL_TYPE","FORCE_USER_LOGIN","onConfirmPaymentPointClick","PAYMENT_TYPE","TRANSFER","onConfirmPointPaymentClick","deals","deal_id","buyVoucherHandle","onPromotionCodeChange","onApplyPromotionCodeClick","checkPromotionCodeHandle","discount","MoneyTab","useStyles","makeStyles","root","flexGrow","maxWidth","backgroundColor","boxShadow","labelIcon","borderBottom","textTransform","fontSize","fontWeight","fontFamily","selected","ITEMS","TAB_MAPS","StyledTabs","withStyles","indicator","height","Tabs","TabIndicatorProps","children","UserTabs","classes","tabActive","setTabActive","Paper","square","classnames","event","newValue","variant","indicatorColor","aria-label","Tab","renderItems","UserView","margin","Card","useStyle","payByPointContainer","paymentTitle","titleSection","InforPaymentcontainer","borderRadius","boxSizing","totalSection","inforText","totalText","price","selectBtn","selectText","line","marginTop","contentSection","padding","flexDirectionRow","flexDirectionRowCoin","btnSection","coinPlaceholder","disableButton","inputText","paymentItem","btnWidth","PayByPoint","number","setNumber","console","log","PaymentItem","isSelected","description","direction","justify","InputComponent","convertCurrency","placeholder","customStyle","onChangeNumber","disabled","Button","disableElevation","setIndex","setValue","Container","PaymentTypes","money","v","errorMessage","PointPaymentTypes","setIsSelected","i","renderContent","tempTotalMoney","discountMoney","UserInfoView","UserInfoContainer","getUserInfoSelector","getUserInfoHandle","push","UserContainer"],"mappings":"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","file":"static/js/12.1c0aa957.chunk.js","sourcesContent":["export const USE_TERMS_DATA = `### Điều kiện chính sách 1\n\nCác điều kiện và điều khoản dưới đây có hiệu lực kể từ khi khách hàng đăng ký thành công việc sử dụng dịch vụ thanh toán giải trí My Home VN, bao gồm nhưng không giới hạn các điều khoản sau:\n\nỨng dụng My Home VN sử dụng cho mọi công dân đủ tuổi trở lên, được phép sử dụng theo quy định của Pháp luật nước Cộng hòa xã hội chủ nghĩa Việt Nam gọi tắt là Pháp luật.\n\nThông tin đăng ký với đơn vị cung cấp dịch vụ My Home VN là thông tin của khách hàng, bao gồm: Số điện thoại đăng ký, email, tên đăng nhập, số CMND, tài khoản ngân hàng.\n\n\n### Điều kiện chính sách 2\n\nCác điều kiện và điều khoản dưới đây có hiệu lực kể từ khi khách hàng đăng ký thành công việc sử dụng dịch vụ thanh toán giải trí My Home VN, bao gồm nhưng không giới hạn các điều khoản sau:\n\nỨng dụng My Home VN sử dụng cho mọi công dân đủ 18 tuổi trở lên, được phép sử dụng theo quy định của Pháp luật nước Cộng hòa xã hội chủ nghĩa Việt Nam gọi tắt là Pháp luật.\n\nThông tin đăng ký với đơn vị cung cấp dịch vụ My Home VN là thông tin của khách hàng, bao gồm: Số điện thoại đăng ký, email, tên đăng nhập, số CMND, tài khoản ngân hàng.\n\n\n### Điều kiện chính sách 3\n\nCác điều kiện và điều khoản dưới đây có hiệu lực kể từ khi khách hàng đăng ký thành công việc sử dụng dịch vụ thanh toán giải trí My Home VN, bao gồm nhưng không giới hạn các điều khoản sau:\n\nỨng dụng My Home VN sử dụng cho mọi công dân đủ 18 tuổi trở lên, được phép sử dụng theo quy định của Pháp luật nước Cộng hòa xã hội chủ nghĩa Việt Nam gọi tắt là Pháp luật.\n\nThông tin đăng ký với đơn vị cung cấp dịch vụ My Home VN là thông tin của khách hàng, bao gồm: Số điện thoại đăng ký, email, tên đăng nhập, số CMND, tài khoản ngân hàng.\n\n`;\n\nexport const POLICY_DATA = `### Chính sách 1\n\nCác điều kiện và điều khoản dưới đây có hiệu lực kể từ khi khách hàng đăng ký thành công việc sử dụng dịch vụ thanh toán giải trí My Home VN, bao gồm nhưng không giới hạn các điều khoản sau:\n\nỨng dụng My Home VN sử dụng cho mọi công dân đủ 18 tuổi trở lên, được phép sử dụng theo quy định của Pháp luật nước Cộng hòa xã hội chủ nghĩa Việt Nam gọi tắt là Pháp luật.\n\nThông tin đăng ký với đơn vị cung cấp dịch vụ My Home VN là thông tin của khách hàng, bao gồm: Số điện thoại đăng ký, email, tên đăng nhập, số CMND, tài khoản ngân hàng.\n\n\n### Chính sách 2\n\nCác điều kiện và điều khoản dưới đây có hiệu lực kể từ khi khách hàng đăng ký thành công việc sử dụng dịch vụ thanh toán giải trí My Home VN, bao gồm nhưng không giới hạn các điều khoản sau:\n\nỨng dụng My Home VN sử dụng cho mọi công dân đủ 18 tuổi trở lên, được phép sử dụng theo quy định của Pháp luật nước Cộng hòa xã hội chủ nghĩa Việt Nam gọi tắt là Pháp luật.\n\nThông tin đăng ký với đơn vị cung cấp dịch vụ My Home VN là thông tin của khách hàng, bao gồm: Số điện thoại đăng ký, email, tên đăng nhập, số CMND, tài khoản ngân hàng.\n\n\n### Chính sách 3\n\nCác điều kiện và điều khoản dưới đây có hiệu lực kể từ khi khách hàng đăng ký thành công việc sử dụng dịch vụ thanh toán giải trí My Home VN, bao gồm nhưng không giới hạn các điều khoản sau:\n\nỨng dụng My Home VN sử dụng cho mọi công dân đủ 18 tuổi trở lên, được phép sử dụng theo quy định của Pháp luật nước Cộng hòa xã hội chủ nghĩa Việt Nam gọi tắt là Pháp luật.\n\nThông tin đăng ký với đơn vị cung cấp dịch vụ My Home VN là thông tin của khách hàng, bao gồm: Số điện thoại đăng ký, email, tên đăng nhập, số CMND, tài khoản ngân hàng.`;\n\nexport const CONTACT_MY_HOME = `### URBAN BBQ :\n- Facebook : https://www.facebook.com/UrbanBBQ.phonuongnoiDoThanh\n- Instagram : https://www.instagram.com/urban.bbq.nuonglaudothanh/\n- Hotline : 028 7309 7949\n- Địa chỉ : 11B Nguyễn Bỉnh Khiêm, P.Bến Nghé, Q.1\n\n###\n### Dao Hua - Taiwanese Hotpot Paradise :\n- Facebook : https://www.facebook.com/DaoHua.Taiwanese.HotpotParadise\n- Instagram : https://www.instagram.com/daohua.taiwanesehotpot/\n- Hotline : 028 7309 5868\n- Địa chỉ : 63B Hoàng Hoa Thám, phường 13, quận Tân Bình\n`;\n\nexport const TERM_AND_CONDITION = `## * Chính sách thanh toán : \n- Giá vé chưa bao gồm 10% thuế VAT.\n- Quý khách thanh toán trực tiếp 100% số tiền khi sử dụng xong dịch vụ tại nhà hàng\n- Trường hợp đối với khách đặt tiệc với số lượng lớn vui lòng đặt cọc trước 50% theo số lượng khách đã đặt.\n\n###\n\n## * Chính sách nhận đặt bàn\n- Khách hàng đặt bàn có thể đặt bàn qua App hoặc liên hệ trực tiếp qua số hotline nhà hàng để đặt bàn\n\n###\n## * Chính sách trẻ em :\n- Trẻ em dưới 1m sẽ được miễn phí giá vé.\n- Trẻ em cao từ 1m đến 1m3 sẽ được giảm - 70% giá vé hiện hành tại nhà hàng thời điểm đó.\n- Trẻ em cao từ 1m3 trở lên sẽ tính giá vé người lớn.\n\n###\n## * Chính sách hủy đặt bàn\n- Nếu quý khách hủy đặt bàn/ tới trễ vui lòng gọi hotline báo nhà hàng trước để thuận tiện cho việc kinh doanh\n- Nhà hàng chỉ hỗ trợ giữ bàn cho khách hàng đã đặt bàn  là 15 phút kể theo thời gian đặt bàn khách đã chốt với nhà hàng, sau 15 phút nếu khách không tới hoặc không gọi thông báo nhà hàng, nhà hàng được quyền hủy bàn của khách hàng.\n- Trường hợp đối với khách hàng đặt tiệc đã cọc nhưng báo hủy Nhà hàng sẽ không hoàn lại tiền cọc theo hợp đồng\n`;\n\nexport const POLICY_MY_HOME = `## * Chính sách bảo mật thông tin\n- MYHOME VIETNAM (đơn vị chủ quản hệ thống website ........., ứng dụng thành viên MYHOME VIỆT NAM ) tôn trọng những thông tin cá nhân của bạn. Chúng tôi hiểu rằng bạn cần biết chúng tôi quản lý những thông tin cá nhân tập hợp được từ Myhome VietNam như thế nào. Hãy đọc và tìm hiểu về những quy định bảo mật thông tin sau đây.\n- Việc bạn truy cập, đăng ký, sử dụng Hệ Thống Myhome Việt Nam có nghĩa rằng bạn đồng ý và chấp nhận ràng buộc bởi các điều khoản của bản quy định bảo mật của chúng tôi.\n\n###\n\n## * Thông tin cá nhân\n- Hệ Thống Myhome Việt Nam hoàn toàn miễn phí, bạn không cần phải cung cấp thông tin cá nhân của bạn. Hệ Thống Myhome Việt Nam chỉ yêu cầu các thông tin cá nhân của bạn như: tên, số điện thoại, email và một số thông tin khác khi bạn muốn tương tác với một số nội dung trên Hệ Thống Myhome Việt Nam. Các thông tin cá nhân này sử dụng để Hệ Thống Myhome Việt Nam nhận diện và liên hệ với bạn khi cần.\n## * Lịch sử tìm kiếm\n- Hệ Thống Myhome Việt Nam sẽ lưu trữ lịch sử tìm kiếm của bạn trong hệ thống, mục đích của việc lưu trữ này là để chúng tôi có thể đưa ra kết quả tìm kiếm lần sau của bạn chính xác hơn, phù hợp với nhu cầu của bạn.\n\n###\n\n## *Cách thức sử dụng thông tin\n-Thông thường, chúng tôi sử dụng các thông tin bạn cung cấp chỉ để liên hệ, hồi đáp những câu hỏi hay thực hiện các yêu cầu của bạn.\n-Thông tin cá nhân của bạn sẽ không bị chia sẻ với bất kỳ bên thứ ba nào khi chưa có sự đồng ý của bạn. Nhưng chúng tôi có thể chia sẻ thông tin cho bên đối tác khi bạn đồng ý.\nDữ liệu khách hàng của Hệ Thống Myhome Việt Nam có thể được chuyển nhượng cho người kế thừa hay người được chỉ định để quản lý công ty khi công ty bị sát nhập, bị mua lại hoặc phá sản.\n\n###\n\n## *Bảo đảm an toàn đối với các thông tin thu thập được\n-Chúng tôi chỉ tập hợp lại các thông tin cá nhân trong phạm vi phù hợp và cần thiết cho mục đích phục vụ đúng đắn của chúng tôi. Và chúng tôi duy trì các biện pháp thích hợp nhằm bảo đảm tính an toàn, nguyên vẹn, độ chính xác, và tính bảo mật những thông tin mà bạn đã cung cấp. Ngoài ra, chúng tôi cũng có những biện pháp thích hợp để đảm bảo rằng bên thứ ba cũng sử dụng các biện pháp bảo đảm an toàn cho các thông tin mà chúng tôi cung cấp cho họ nếu có.\n*Cookies\nCookies là những file nhỏ được Download để ghi chép các hoạt động trong một Website.\nChúng tôi sử dụng cookies để ghi chép các hoạt động của nguời sử dụng hay mục đích của người sử dụng không muốn xem cùng nội dung quảng cáo được lặp đi lặp lại nhiều lần. Ngoài ra, chúng tôi cũng sử dụng cookies để đáp ứng các yêu cầu của người sử dụng và các mục đích khác.\n\n###\n\n## *Liên kết các Website khác\nNếu bạn nhấn đường liên kết sang Website thứ ba, bao gồm cả trang quảng cáo, bạn sẽ rời trang Hệ Thống Myhome Việt Nam và sẽ đến trang Web bạn đã chọn. Chúng tôi không thể kiểm soát các hoạt động của bên thứ ba và không chịu trách nhiệm về sự an toàn hay bất kể những nội dung gì có trong Website đó.\n\n###\n\n## *Sửa đổi và xoá thông tin tài khoản\nBạn có thể sửa đổi, cập nhật thông tin tài khoản của bạn bất cứ lúc nào. Cho dù, bạn tự xoá các thông tin đó đi nhưng chúng tôi có thể phục hồi những thông tin đó từ cơ sở dữ liệu của chúng tôi để giải quyết các tranh chấp, thi hành bản thoả thuận người sử dụng, hay vì các yêu cầu kỹ thuật, pháp lý liên quan đến sự an toàn và những hoạt động của trang website/ ứng dụng thành viên của chúng tôi.\n\n###\n\n## *Điều khoản thay đổi\nChúng tôi có quyền thay đổi nội dung của các điều khoản này. Xin thường xuyên xác nhận để biết về các điều khoản thay đổi trong bản quy định bảo mật của chúng tôi. Thêm vào đó chúng tôi sẽ thông báo cho bạn bằng email khi có những thay đổi quan trọng về cách sử dụng liên quan các thông tin cá nhân của bạn. Trong trường hợp bạn từ chối các điều khoản thay đổi có trongHệ Thống Myhome Việt Nam, xin liên hệ chúng tôi theo địa chỉ email Myhomevietnam79@gmail.com. Khi bạn tiếp tục sử dụng Hệ Thống Myhome Việt Nam, có nghĩa là bạn đồng ý và chấp nhận bị ràng buộc với các thay đổi trong bản quy định bảo mật trực tuyến này.\n`;\n\nexport const COMPLAIN_MY_HOME = `- Mọi thông tin đóng góp ý kiến về dịch vụ và chất lượng tại nhà hàng vui lòng liên hệ hotline : 0797 711 711 hoặc Email: Myhomevietnam79@gmail.com`;\n","import * as Yup from 'yup';\n\nexport const updateInfoFormConfig = [\n  {\n    name: 'avatar',\n    key: 'avatar',\n    type: 'image',\n    props: {},\n  },\n  {\n    name: 'name',\n    key: 'name',\n    required: true,\n    label: 'Họ tên',\n    props: { className: 'edit_user_info_name' },\n  },\n  {\n    name: 'id_number',\n    key: 'id_number',\n    label: 'CMND',\n    props: { className: 'edit_user_info_identify' },\n  },\n  {\n    name: 'phone_number',\n    key: 'phone_number',\n    label: 'Số điện thoại',\n    props: { readOnly: true, className: 'edit_user_info_phone' },\n  },\n  {\n    name: 'email',\n    key: 'email',\n    label: 'Email',\n    props: { className: 'edit_user_info_email' },\n  },\n  {\n    name: 'dob',\n    key: 'dob',\n    label: 'Ngày tháng năm sinh',\n    props: { className: 'edit_user_info_dob' },\n  },\n  {\n    name: 'address',\n    type: 'text-area',\n    key: 'address',\n    label: 'Địa chỉ',\n    props: { className: 'edit_user_info_address' },\n  },\n];\n\nexport const createPasswordFormConfig = [\n  // ...updateInfoFormConfig,\n  ...[\n    {\n      name: 'old_password',\n      key: 'old_password',\n      props: {\n        type: 'password',\n        className: 'edit_user_info_old_password',\n      },\n      label: 'Mật khẩu cũ',\n    },\n    {\n      name: 'password',\n      key: 'password',\n      props: {\n        type: 'password',\n        className: 'edit_user_info_new_password',\n      },\n      label: 'Mật khẩu mới',\n    },\n    {\n      name: 'confirm_password',\n      key: 'confirm_password',\n      props: {\n        type: 'password',\n        className: 'edit_user_info_confirm_password',\n      },\n      label: 'Nhập lại',\n    },\n  ],\n];\n\nexport const updateInfoValidateSchema = Yup.object().shape({\n  name: Yup.string().required('Vui lòng nhập họ và tên'),\n  email: Yup.string().email().required('Vui lòng nhập email'),\n});\n\nexport const updatePasswordSchema = Yup.object({\n  oldPassword: Yup.string().required('Chưa nhập mật khẩu cũ'),\n  newPassword: Yup.string().required('Chưa nhập mật khẩu mới'),\n  confirmPassword: Yup.string()\n    .oneOf([Yup.ref('newPassword'), null], 'Mật khẩu xác nhận phải trùng khớp')\n    .required('Mật khẩu xác nhận phải trùng khớp'),\n});\n","/* eslint-disable no-unused-vars */\n/* eslint-disable camelcase */\nimport React, { useCallback, useState } from 'react';\nimport FormBuilder from 'src/components/FormBuilder/FormBuilder';\nimport { AvatarIcon, BackIcon } from 'src/assets/icons';\nimport './UserInfoTab.scss';\nimport { IconButton, PasswordInput } from 'src/components/base';\nimport {\n  changePasswordHandle,\n  updateUserInfoHandle,\n} from 'src/redux/actions/auth.action';\nimport { useDispatch } from 'react-redux';\nimport { Grid } from '@material-ui/core';\nimport { Formik } from 'formik';\nimport {\n  updateInfoFormConfig,\n  updateInfoValidateSchema,\n  updatePasswordSchema,\n} from './config';\n\nconst FORM_TYPE = {\n  SHOW_INFO: '@FORM_TYPE/SHOW_INFO',\n  EDIT_INFO: '@FORM_TYPE/EDIT_INFO',\n  CHANGE_PASSWORD: '@FORM_TYPE/CHANGE_PASSWORD',\n};\n\nconst LABEL_MAP = {\n  phone_number: 'Số điện thoại',\n  birth_day: 'Ngày tháng năm sinh',\n  identity_card: 'CMND',\n  email: 'Email',\n  address: 'Địa chỉ',\n};\n\nfunction UserInfoTabs({ userInfo }) {\n  const dispatch = useDispatch();\n  const [formType, setFormType] = useState(FORM_TYPE.SHOW_INFO);\n  const [changePasswordErrorMessage, setChangePasswordErrorMessage] = useState(\n    ''\n  );\n\n  const onUpdateUseInfoSubmit = (values) => {\n    const tempUserInfo = {\n      avatar: values.avatar,\n      name: values.name,\n      address: values.address,\n      dob: values.dob,\n      email: values.email,\n      id_number: values.id_number,\n      phone_number: values.phone_number,\n    };\n\n    dispatch(updateUserInfoHandle(tempUserInfo));\n    setFormType(FORM_TYPE.SHOW_INFO);\n  };\n\n  return (\n    <div className=\"user-tabs\">\n      {formType === FORM_TYPE.EDIT_INFO && (\n        <div\n          style={{\n            width: '100%',\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'flex-start',\n          }}\n        >\n          <div\n            onClick={() => {\n              setFormType(FORM_TYPE.SHOW_INFO);\n            }}\n            style={{ display: 'flex' }}\n          >\n            <BackIcon />\n            <p className=\"edit_info_title\">Chỉnh sửa thông tin</p>\n          </div>\n          <FormBuilder\n            configForm={updateInfoFormConfig}\n            configValidate={updateInfoValidateSchema}\n            initialValues={{\n              ...userInfo,\n              avatar: userInfo.image_url,\n            }}\n            onSubmit={onUpdateUseInfoSubmit}\n          >\n            <div className=\"form-widget\">\n              <div className=\"form-label\" />\n              <div className=\"form-input\">\n                <button className=\"edit_user_info_submit\" type=\"submit\">\n                  Cập nhật\n                </button>\n              </div>\n            </div>\n          </FormBuilder>\n        </div>\n      )}\n      {formType === FORM_TYPE.SHOW_INFO && (\n        <InfoShow\n          onChangePasswordClick={() => {\n            setFormType(FORM_TYPE.CHANGE_PASSWORD);\n          }}\n          userInfo={userInfo}\n          editInfo={() => {\n            setFormType(FORM_TYPE.EDIT_INFO);\n          }}\n        />\n      )}\n      {formType === FORM_TYPE.CHANGE_PASSWORD && (\n        <Formik\n          validateOnChange={false}\n          validateOnBlur={false}\n          initialValues={{\n            oldPassword: '',\n            newPassword: '',\n            confirmPassword: '',\n          }}\n          onSubmit={(values) => {\n            setChangePasswordErrorMessage('');\n            dispatch(\n              changePasswordHandle(\n                {\n                  old_password: values.oldPassword,\n                  new_password: values.newPassword,\n                  re_password: values.confirmPassword,\n                },\n                () => {\n                  setFormType(FORM_TYPE.SHOW_INFO);\n                },\n                (error) => {\n                  if (error?.response?.data?.message === 'Password is wrong')\n                    setChangePasswordErrorMessage(\n                      'Mật khẩu hiện tại không đúng'\n                    );\n                }\n              )\n            );\n          }}\n          validationSchema={updatePasswordSchema}\n        >\n          {({ handleSubmit, setFieldValue, errors }) => {\n            return (\n              <div className=\"change_password_container\">\n                <div\n                  onClick={() => {\n                    setFormType(FORM_TYPE.SHOW_INFO);\n                  }}\n                  style={{ display: 'flex', marginBottom: '54px' }}\n                >\n                  <BackIcon />\n                  <div className=\"change_password_title\">Đổi mật khẩu</div>\n                </div>\n\n                <Grid\n                  style={{\n                    marginBottom: '12px',\n                    alignItems: 'center',\n                  }}\n                  container\n                  spacing={1}\n                >\n                  <Grid item xl={2} lg={2} md={12} sm={12} xs={12}>\n                    <div className=\"current_password_title\">Mật khẩu cũ</div>\n                  </Grid>\n                  <Grid item xl={5} lg={5} md={7} sm={10} xs={12}>\n                    <PasswordInput\n                      className=\"old_password_input\"\n                      type=\"password\"\n                      onChange={(e) => {\n                        setFieldValue('oldPassword', e.target.value);\n                      }}\n                    />\n                    <div className=\"change_password_error\">\n                      {errors.oldPassword}\n                    </div>\n                  </Grid>\n                </Grid>\n                <Grid\n                  spacing={1}\n                  container\n                  style={{\n                    marginBottom: '12px',\n                    alignItems: 'center',\n                  }}\n                >\n                  <Grid item xl={2} lg={2} md={12} sm={12} xs={12}>\n                    <div className=\"new_password_title\">Mật khẩu mới</div>\n                  </Grid>\n                  <Grid item xl={5} lg={5} md={7} sm={10} xs={12}>\n                    <PasswordInput\n                      className=\"new_password_input\"\n                      onChange={(e) => {\n                        setFieldValue('newPassword', e.target.value);\n                      }}\n                      type=\"password\"\n                    />\n                    <div className=\"change_password_error\">\n                      {errors.newPassword}\n                    </div>\n                  </Grid>\n                </Grid>\n                <Grid\n                  spacing={1}\n                  style={{\n                    marginBottom: '12px',\n                    alignItems: 'center',\n                  }}\n                  container\n                >\n                  <Grid item xl={2} lg={2} md={12} sm={12} xs={12}>\n                    <div className=\"confirm_password_title\">Nhập lại</div>\n                  </Grid>\n                  <Grid item xl={5} lg={5} md={7} sm={10} xs={12}>\n                    <PasswordInput\n                      className=\"confirm_password_input\"\n                      onChange={(e) => {\n                        setFieldValue('confirmPassword', e.target.value);\n                      }}\n                      type=\"password\"\n                    />\n                    <div className=\"change_password_error\">\n                      {errors.confirmPassword}\n                    </div>\n                  </Grid>\n                </Grid>\n                <div style={{ display: 'flex', justifyContent: 'center' }}>\n                  <div className=\"change_password_error\">\n                    {changePasswordErrorMessage}\n                  </div>\n                </div>\n                <div className=\"form-widget\">\n                  <button\n                    className=\"change_password_submit\"\n                    type=\"submit\"\n                    onClick={handleSubmit}\n                  >\n                    Cập nhật\n                  </button>\n                </div>\n              </div>\n            );\n          }}\n        </Formik>\n      )}\n    </div>\n  );\n}\n\nconst InfoShow = React.memo(function ({\n  onChangePasswordClick,\n  userInfo,\n  editInfo = {},\n}) {\n  const { image_url = '', name = '' } = userInfo || {};\n\n  const handleClick = useCallback(\n    (evt) => {\n      evt.preventDefault();\n      if (editInfo) {\n        editInfo();\n      }\n    },\n    [editInfo]\n  );\n\n  const renderInfo = useCallback(() => {\n    return Object.keys(LABEL_MAP).map((key) => {\n      return (\n        <div className=\"info-row\" key={key}>\n          <div className=\"info-label\">{LABEL_MAP[key]}:</div>\n          <div className=\"info-content\">{userInfo && userInfo[key]}</div>\n        </div>\n      );\n    });\n  }, [userInfo]);\n\n  return (\n    <div className=\"user-info-show\">\n      <div className=\"info-container\">\n        <div className=\"info-row\">\n          {image_url ? (\n            <img className=\"user-avatar\" src={image_url} />\n          ) : (\n            <AvatarIcon className=\"ic-default-avatar\" />\n          )}\n          <p className=\"user-name\">{name}</p>\n        </div>\n        {renderInfo()}\n        <div onClick={onChangePasswordClick} className=\"form-widget\">\n          <div className=\"form-label\" />\n          <div className=\"change_password\">Đổi mật khẩu</div>\n        </div>\n      </div>\n      <div className=\"edit-info\">\n        <IconButton icon=\"pencil\" title=\" Chỉnh sửa\" onClick={handleClick} />\n      </div>\n    </div>\n  );\n});\n\nexport default React.memo(UserInfoTabs);\n","import UserInfoTab from './UserInfoTab';\n\nexport default UserInfoTab;\n","import React from 'react';\nimport ReactMarkdown from 'react-markdown';\n\nimport { USE_TERMS_DATA } from '../../constant';\n\nconst TermsTab = () => {\n  return <ReactMarkdown source={USE_TERMS_DATA} />;\n};\n\nexport default React.memo(TermsTab);\n","import React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { POLICY_DATA } from '../../constant';\n\nconst PolicyTab = () => {\n  return <ReactMarkdown source={POLICY_DATA} />;\n};\n\nexport default React.memo(PolicyTab);\n","import React, { useEffect, useState } from 'react';\nimport FontAwesome from 'react-native-vector-icons/dist/FontAwesome';\nimport Entypo from 'react-native-vector-icons/dist/Entypo';\nimport MaterialIcons from 'react-native-vector-icons/dist/MaterialIcons';\nimport './ContactTab.scss';\nimport { getListFAQHandle } from 'src/redux/actions/common.action';\nimport { useDispatch } from 'react-redux';\n\nconst ContactTab = () => {\n  const [listFaqSection, setListFaqSection] = useState([]);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(\n      getListFAQHandle((listFaqSectionRes) => {\n        setListFaqSection(listFaqSectionRes);\n      })\n    );\n  }, []);\n  return (\n    <div className=\"contact-tab\">\n      <div className=\"address_container\">\n        <Entypo name=\"home\" size={20} />\n        <div className=\"address_text\">\n          Địa chỉ: 3E/6 Phổ Quang, Phường 2, Quận Tân Bình, TP Hồ Chí Minh\n        </div>\n      </div>\n      <div className=\"hotline_container\">\n        <FontAwesome name=\"phone\" size={20} />\n        <div className=\"hotline_text\">Hotline: 0287 300 3898 </div>\n      </div>\n      <div className=\"email_container\">\n        <MaterialIcons name=\"email\" size={20} />\n        <div className=\"email_text\">Email: myhomevietnam79@gmail.com </div>\n      </div>\n      <div className=\"divider\" />\n      <div>\n        <div className=\"faq_section_title\">Câu hỏi thường gặp</div>\n        {listFaqSection.map((obj, index) => {\n          return (\n            <div\n              onClick={() => {\n                const tempListFAQSection = listFaqSection.slice(0);\n                tempListFAQSection[index] = {\n                  ...tempListFAQSection[index],\n                  expanded: !tempListFAQSection[index].expanded,\n                };\n                setListFaqSection(tempListFAQSection);\n              }}\n              className=\"faq_container\"\n            >\n              <div className=\"title_faq_container\">\n                <div className=\"question_text\">{obj.question}</div>\n                <MaterialIcons\n                  name=\"keyboard-arrow-down\"\n                  color=\"#3A556A\"\n                  size={30}\n                />\n              </div>\n              {obj.expanded && <div className=\"answer_text\">{obj.answer}</div>}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(ContactTab);\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { MODAL_TYPE, PAYMENT_TYPE } from 'src/constants';\nimport { useModal } from 'src/hooks';\nimport { updateListVoucherInCart } from 'src/redux/actions/cart.action';\nimport { addModal } from 'src/redux/actions/ui.action';\nimport {\n  buyVoucherHandle,\n  checkPromotionCodeHandle,\n} from 'src/redux/actions/voucher.action';\nimport { getAccessTokenSelector } from 'src/redux/selectors/auth';\nimport { getVouchersCartSelector } from 'src/redux/selectors/cart.selector';\n\nconst { default: PayModalView } = require('./payModal.view');\n\nconst PayModalContainer = () => {\n  const vouchers = useSelector(getVouchersCartSelector);\n  const accessToken = useSelector(getAccessTokenSelector);\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [promotionCode, setPromotionCode] = useState('');\n  const [tempTotalMoneyVoucher, setTempTotalMoneyVoucher] = useState(0);\n  const [totalMoneyVoucher, setTotalMoneyVoucher] = useState(0);\n  const [discountMoneyVoucher, setDiscountMoneyVoucher] = useState(0);\n  const [modalType, setModalType] = useState('');\n  const [paymentType, setPaymentType] = useState('');\n  const [\n    errorMessagePaymentPointVoucher,\n    setErrorMessagePaymentPointVoucher,\n  ] = useState('');\n\n  const { Modal, show, hide } = useModal();\n  useEffect(() => {\n    const temporaryMoney = vouchers.reduce(\n      (total, current) => total + current.regular_price * current.quantity,\n      0\n    );\n    setTempTotalMoneyVoucher(temporaryMoney);\n    const totalMoney = vouchers.reduce(\n      (total, current) => total + current.regular_price * current.quantity,\n      0\n    );\n    setTotalMoneyVoucher(totalMoney);\n  }, [vouchers]);\n  return (\n    <PayModalView\n      paymentType={paymentType}\n      setPaymentType={setPaymentType}\n      onCountChange={(deal, value) => {\n        const voucherIndex = vouchers.findIndex((obj) => obj.id === deal.id);\n        if (voucherIndex >= 0) {\n          const tempVouchers = vouchers.slice(0);\n          tempVouchers[voucherIndex] = {\n            ...tempVouchers[voucherIndex],\n            quantity: value,\n          };\n          dispatch(updateListVoucherInCart(tempVouchers));\n        }\n        setPromotionCode('');\n        setDiscountMoneyVoucher(0);\n      }}\n      Modal={Modal}\n      hide={hide}\n      tempTotalMoneyVoucher={tempTotalMoneyVoucher}\n      totalMoneyVoucher={totalMoneyVoucher}\n      discountMoneyVoucher={discountMoneyVoucher}\n      onDeleteClick={(deal) => {\n        const tempVouchers = vouchers.filter((obj) => obj.id !== deal.id);\n        dispatch(updateListVoucherInCart(tempVouchers));\n        if (tempVouchers.length === 0) {\n          history.goBack();\n        }\n      }}\n      onForceLoginClick={() => {\n        if (!accessToken) {\n          dispatch(addModal({ type: MODAL_TYPE.FORCE_USER_LOGIN }));\n        } else {\n          setModalType('Payment');\n          show();\n        }\n      }}\n      onConfirmPaymentPointClick={() => {\n        if (paymentType === PAYMENT_TYPE.TRANSFER) {\n          setModalType('PaymentFormPopup');\n          show();\n        } else {\n          setModalType('ConfirmPaymentPointPopup');\n          show();\n        }\n      }}\n      onConfirmPointPaymentClick={() => {\n        const deals = vouchers.map((obj) => ({\n          deal_id: obj.id,\n          quantity: obj.quantity,\n        }));\n        dispatch(\n          buyVoucherHandle(\n            deals,\n            promotionCode,\n            () => {\n              setModalType('PaymentSuccessModal');\n            },\n            (error) => {\n              setErrorMessagePaymentPointVoucher(error.message);\n            }\n          )\n        );\n      }}\n      promotionCode={promotionCode}\n      onPromotionCodeChange={(evt) => {\n        setPromotionCode(evt.target.value);\n      }}\n      modalType={modalType}\n      errorMessagePaymentPointVoucher={errorMessagePaymentPointVoucher}\n      onApplyPromotionCodeClick={() => {\n        dispatch(\n          checkPromotionCodeHandle(\n            promotionCode,\n            tempTotalMoneyVoucher,\n            (data) => {\n              setDiscountMoneyVoucher(data.discount);\n              setTotalMoneyVoucher(tempTotalMoneyVoucher - data.discount);\n            }\n          )\n        );\n      }}\n      vouchers={vouchers}\n    />\n  );\n};\n\nexport default PayModalContainer;\n","import React from 'react';\nimport PayModalView from '../../payModal/payModal.container';\n\nconst MoneyTab = () => {\n  return (\n    <div>\n      <PayModalView />\n    </div>\n  );\n};\n\nexport default React.memo(MoneyTab);\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useState } from 'react';\nimport classnames from 'classnames';\nimport { makeStyles, Paper, Tab, Tabs, withStyles } from '@material-ui/core';\nimport {\n  UserInfoIcon,\n  MoneyIcon,\n  RuleIcon,\n  FileIcon,\n  ContactIcon,\n} from 'src/assets/icons';\nimport './Tabs.scss';\nimport UserInfoTab from './UserInfoTab';\nimport TermsTab from './TermsTab';\nimport PolicyTab from './PolicyTab';\nimport ContactTab from './ContactTab/ContactTab';\nimport MoneyTab from './MoneyTab';\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n    maxWidth: 1000,\n    backgroundColor: '#F6F9FF',\n    width: '100%',\n    boxShadow: 'none',\n  },\n  labelIcon: {\n    borderBottom: '3px solid black',\n    marginBottom: '-3px',\n    textTransform: 'unset',\n    fontSize: '1.2rem',\n    fontWeight: 700,\n    fontFamily: 'Google Sans',\n    color: '#6F7073',\n  },\n  selected: {\n    color: '#243358',\n    fontFamily: 'Google Sans',\n    textTransform: 'unset',\n    fontSize: '1.2rem',\n  },\n});\n\nconst ITEMS = [\n  {\n    icon: <UserInfoIcon />,\n    label: 'Tài khoản chủ thẻ',\n  },\n  {\n    icon: <MoneyIcon />,\n    label: 'Mua điểm',\n  },\n  {\n    icon: <RuleIcon />,\n    label: 'Điều khoản sử dụng',\n  },\n  {\n    icon: <FileIcon />,\n    label: 'Chính sách bảo mật',\n  },\n  {\n    icon: <ContactIcon />,\n    label: 'Liên hệ - Hỗ trợ',\n  },\n];\n\nconst TAB_MAPS = {\n  USER_INFO: 0,\n  MONEY: 1,\n  TERM: 2,\n  POLICY: 3,\n  CONTACT: 4,\n};\n\nconst StyledTabs = withStyles({\n  root: {\n    boxShadow: 'none',\n  },\n  indicator: {\n    display: 'flex',\n    justifyContent: 'center',\n    height: '4px',\n\n    '& > span': {\n      width: '100%',\n      height: '5px',\n      backgroundColor: '#243358',\n    },\n  },\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\n\nfunction UserTabs({ userInfo }) {\n  const classes = useStyles();\n  const [tabActive, setTabActive] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    event.preventDefault();\n    setTabActive(newValue);\n  };\n\n  const renderItems = () => {\n    switch (tabActive) {\n      case TAB_MAPS.USER_INFO:\n        return <UserInfoTab userInfo={userInfo} />;\n      case TAB_MAPS.MONEY:\n        return <MoneyTab />;\n      case TAB_MAPS.TERM:\n        return <TermsTab />;\n      case TAB_MAPS.POLICY:\n        return <PolicyTab />;\n      case TAB_MAPS.CONTACT:\n        return <ContactTab />;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"user-tabs\">\n      <Paper square className={classnames(classes.root)}>\n        <StyledTabs\n          value={tabActive}\n          onChange={handleChange}\n          variant=\"fullWidth\"\n          indicatorColor=\"secondary\"\n          aria-label=\"icon label tabs example\"\n        >\n          {ITEMS.map((item) => (\n            <Tab\n              icon={item.icon}\n              label={item.label}\n              classes={{\n                labelIcon: classes.labelIcon,\n                selected: classes.selected,\n              }}\n            />\n          ))}\n        </StyledTabs>\n      </Paper>\n      <div className=\"tab-content\">{renderItems()}</div>\n    </div>\n  );\n}\n\n// UserTabs.propTypes = {};\n\nexport default React.memo(UserTabs);\n","import UserTabs from './Tabs';\n\nexport default UserTabs;\n","import React from 'react';\nimport Card from 'src/components/base/Card';\nimport UserTabs from '../components/Tabs';\n\nimport './UserView.scss';\n\nconst UserView = (props) => {\n  return (\n    <div className=\"user-page\">\n      <div className=\"hero-banner\" />\n      {/* <CashInfo userInfo={props.userInfo} /> */}\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          margin: '-120px auto 20px auto',\n        }}\n      >\n        <Card userInfo={props.userInfo} />\n      </div>\n      <UserTabs userInfo={props.userInfo} />\n    </div>\n  );\n};\n\nexport default React.memo(UserView);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyle = makeStyles(() => {\n  return {\n    payByPointContainer: {\n      width: '100%',\n      height: 357,\n    },\n    paymentTitle: {\n      fontFamily: 'Google Sans',\n      fontWeight: 'bold',\n      fontSize: 18,\n      color: '#000000',\n    },\n    titleSection: {\n      display: 'flex',\n      alignItems: 'flex-start',\n    },\n    InforPaymentcontainer: {\n      width: '100%',\n      height: 135,\n      borderRadius: 15,\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      boxSizing: 'border-box',\n      justifyContent: 'center',\n    },\n    totalSection: {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      width: '100%',\n      alignItems: 'center',\n    },\n    inforText: {\n      fontSize: 36,\n      fontWeight: 'bold',\n      color: 'var(--black)',\n    },\n    totalText: {\n      fontSize: 24,\n      color: 'var(--black)',\n    },\n    price: {\n      fontSize: 36,\n      fontWeight: 'bold',\n      color: 'var(--primary-orange)',\n    },\n    selectBtn: {\n      backgroundColor: '#FE5466',\n      width: 126,\n      height: 32,\n    },\n    selectText: {\n      fontFamily: 'Google Sans',\n      fontWeight: 'bold',\n      fontSize: 10,\n      color: '#FFFFFF',\n      '&::p': {\n        fontSize: 10,\n      },\n    },\n    line: {\n      width: '100%',\n      height: 1,\n      backgroundColor: '#BCBEC0',\n      marginTop: 13,\n    },\n    contentSection: {\n      width: '100%',\n      display: 'flex',\n      flexDirection: 'row',\n      // alignItems: 'center',\n      // justifyContent: 'flex-start',\n      padding: 25,\n      '&::svg': {\n        width: 50,\n        height: 50,\n      },\n    },\n    flexDirectionRow: {\n      flexDirection: 'row',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      width: '100%',\n      marginTop: 12,\n    },\n    flexDirectionRowCoin: {\n      flexDirection: 'row',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      width: '100%',\n    },\n    btnSection: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%',\n      justifyContent: 'center',\n    },\n    coinPlaceholder: {\n      color: 'white',\n    },\n    disableButton: {\n      width: 126,\n      height: 32,\n      backgroundColor: '#A6AEBB',\n    },\n    inputText: {\n      fontFamily: 'Google Sans',\n      fontSize: 18,\n    },\n    paymentItem: {\n      margin: 'auto',\n    },\n    btnWidth: {\n      marginTop: '20px',\n      width: '80%',\n      display: 'flex',\n      justifyContent: 'flex-end',\n    },\n  };\n});\n\nexport default useStyle;\n","/* eslint-disable no-unused-vars */\nimport React, { useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport PaymentItem from 'src/components/base/layout/PaymentItem';\nimport Button from '@material-ui/core/Button';\nimport { PaymentNowIcon, TransferIcon, CoinIcon } from 'src/assets/icons';\nimport './PointPaymentTypes.scss';\nimport { PAYMENT_TYPE } from 'src/constants';\nimport { convertCurrency } from 'src/utils/currency';\nimport InputComponent from '../InputComponent';\nimport useStyles from './styles';\n\nconst PayByPoint = (props) => {\n  const classes = useStyles();\n  const [number, setNumber] = useState('');\n  const onChangeNumber = (value) => {\n    setNumber({ value });\n  };\n  console.log('number', number);\n  return (\n    <div className={classes.payByPointContainer}>\n      <Grid container>\n        <Grid item lg={12}>\n          <div>\n            <p className={classes.paymentTitle}>Chọn hình thức thanh toán</p>\n          </div>\n        </Grid>\n        <Grid container>\n          <Grid item xl={3} lg={3} md={3} sm={4} xs={6}>\n            <PaymentItem\n              isSelected={props.paymentType === PAYMENT_TYPE.TRANSFER}\n              onClick={() => {\n                props.setPaymentType(PAYMENT_TYPE.TRANSFER);\n              }}\n              icon={\n                props.paymentType === PAYMENT_TYPE.TRANSFER ? (\n                  <TransferIcon className=\"transferSVG\" />\n                ) : (\n                  <TransferIcon />\n                )\n              }\n              title=\"Chuyển khoản\"\n              description=\"Chuyển khoản trực tiếp\"\n            />\n          </Grid>\n          <Grid item xl={6} lg={6} md={6} sm={6} xs={12}>\n            <div>\n              <div className={classes.flexDirectionRowCoin}>\n                <Grid\n                  style={{ marginTop: '20px' }}\n                  container\n                  direction=\"row\"\n                  justify=\"space-between\"\n                  alignItems=\"center\"\n                >\n                  <Grid lg={6} md={12} xs={12}>\n                    <p className={classes.inputText}>Nhập số e-coin muốn nạp</p>\n                  </Grid>\n                  <Grid lg={6} md={12} xs={12}>\n                    <InputComponent\n                      value={convertCurrency(number.value)}\n                      placeholder=\"0\"\n                      icon={<CoinIcon />}\n                      customStyle\n                      onChange={(value) => onChangeNumber(value)}\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n              <div className={classes.flexDirectionRow}>\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"space-between\"\n                  alignItems=\"center\"\n                >\n                  <Grid lg={6} md={12} xs={12}>\n                    <p className={classes.inputText}>Số tiền cần tương ứng</p>\n                  </Grid>\n                  <Grid lg={6} md={12} xs={12}>\n                    <InputComponent\n                      value={convertCurrency(number.value)}\n                      disabled\n                      placeholder=\"0 VNĐ\"\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n            </div>\n          </Grid>\n        </Grid>\n        <Grid item lg={12} md={9} xs={7} sm={4} className={classes.btnSection}>\n          <div className={classes.btnWidth}>\n            <Button\n              onClick={props.onClick}\n              disableElevation\n              disabled={!props.paymentType}\n              classes={{\n                root:\n                  classes[props.paymentType ? 'selectBtn' : 'disableButton'],\n              }}\n            >\n              <p className=\"selectText\">Thanh Toán ngay</p>\n            </Button>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default PayByPoint;\n","/* eslint-disable no-unused-vars */\nimport React, { useState } from 'react';\nimport PaymentFormPopup from 'src/components/base/layout/paymentPopup/paymentFormPopup';\nimport PaymentTypes from 'src/components/base/layout/PaymentTypes';\nimport './payModal.scss';\nimport { Grid, Container } from '@material-ui/core';\nimport PointPaymentPopup from 'src/components/base/layout/pointPaymentPopup';\nimport PaymentSuccessModal from 'src/components/base/layout/paymentSuccessModal';\nimport { SuccessIcon } from 'src/assets/icons';\nimport PointPaymentTypes from 'src/components/base/layout/PointPaymentTypes';\nimport PayByPoint from 'src/components/base/layout/payByPoint';\n\nfunction PayModalView(props) {\n  const [index, setIndex] = useState(null);\n  const [value, setValue] = useState(null);\n  const { modalType, Modal, hide } = props;\n  const renderContent = () => {\n    switch (modalType) {\n      case 'Payment':\n        return (\n          <PaymentTypes\n            money={props.tempTotalMoneyVoucher - props.discountMoneyVoucher}\n            paymentType={props.paymentType}\n            setPaymentType={props.setPaymentType}\n            onClick={props.onConfirmPaymentPointClick}\n          />\n        );\n      case 'ConfirmPaymentPointPopup':\n        return (\n          <PointPaymentPopup\n            setValue={(v) => {\n              setValue(v);\n            }}\n            errorMessage={props.errorMessagePaymentPointVoucher}\n            money={props.tempTotalMoneyVoucher - props.discountMoneyVoucher}\n            onClick={props.onConfirmPointPaymentClick}\n          />\n        );\n      case 'PointPayMethod':\n        return (\n          <PointPaymentTypes\n            isSelected={index}\n            setIsSelected={(i) => {\n              setIndex(i);\n            }}\n            onClick={() => {\n              // if (index === 0) {\n              //   setIsClick('PayPointSuccessModal');\n              // } else if (index === 1) {\n              //   setIsClick('PaymentFormPopup');\n              // } else {\n              //   return null;\n              // }\n            }}\n          />\n        );\n      case 'PaymentFormPopup': {\n        return <PaymentFormPopup />;\n      }\n      default:\n        return null;\n    }\n  };\n  return (\n    <Grid container direction=\"column\" className=\"cart-container\">\n      <Container maxWidth=\"lg\">\n        {/* <PaymentTypes\n                    money={props.tempTotalMoneyVoucher - props.discountMoneyVoucher}\n                    paymentType={props.paymentType}\n                    setPaymentType={props.setPaymentType}\n                    onClick={props.onConfirmPaymentPointClick}\n                /> */}\n        <PayByPoint\n          paymentType={props.paymentType}\n          setPaymentType={props.setPaymentType}\n          onClick={props.onConfirmPaymentPointClick}\n        />\n        <Modal className=\"asdasmodal\">{renderContent()}</Modal>\n        {modalType === 'PaymentSuccessModal' ? (\n          <Modal className=\"modal\">\n            <PaymentSuccessModal\n              icon={<SuccessIcon />}\n              vouchers={props.vouchers}\n              tempTotalMoney={props.tempTotalMoneyVoucher}\n              discountMoney={props.discountMoneyVoucher}\n              promotionCode={props.promotionCode}\n              paymentType={props.paymentType}\n              onClick={hide}\n            />\n          </Modal>\n        ) : null}\n      </Container>\n    </Grid>\n  );\n}\n\nexport default React.memo(PayModalView);\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport {\n  getAccessTokenSelector,\n  getUserInfoSelector,\n} from 'src/redux/selectors/auth';\nimport { getUserInfoHandle } from 'src/redux/actions/auth.action';\n\nconst { default: UserInfoView } = require('./UserInfo.view');\n\nconst UserInfoContainer = () => {\n  const userInfo = useSelector(getUserInfoSelector);\n  const accessToken = useSelector(getAccessTokenSelector);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (accessToken) {\n      dispatch(getUserInfoHandle());\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!accessToken) history.push('/');\n  }, [accessToken]);\n\n  return <UserInfoView userInfo={userInfo} />;\n};\n\nexport default UserInfoContainer;\n","import UserContainer from './views/UserInfo.container';\n\nexport default UserContainer;\n"],"sourceRoot":""}