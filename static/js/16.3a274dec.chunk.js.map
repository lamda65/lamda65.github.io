{"version":3,"sources":["../node_modules/@material-ui/core/esm/Container/Container.js","modules/order/views/components/selectedItem/index.js","modules/order/views/components/selectedComponent/index.js","modules/order/views/listOrder/ListOrder.view.js","modules/order/views/listOrder/ListOrder.container.js"],"names":["Container","React","props","ref","classes","className","_props$component","component","Component","_props$disableGutters","disableGutters","_props$fixed","fixed","_props$maxWidth","maxWidth","other","_objectWithoutProperties","_extends","clsx","root","concat","capitalize","String","withStyles","theme","_defineProperty","width","marginLeft","boxSizing","marginRight","paddingLeft","spacing","paddingRight","display","breakpoints","up","Object","keys","values","reduce","acc","breakpoint","value","maxWidthXs","Math","max","xs","maxWidthSm","sm","maxWidthMd","md","maxWidthLg","lg","maxWidthXl","xl","name","useStyles","makeStyles","buttonCustom","height","SelectedItem","item","borderNone","updateListSelectedHandle","console","log","getQuantity","quantity","id","classNames","convertCurrency","price","handleDecrement","handleIncrement","customStyle","SelectedComponent","listSelected","branch","totalQuantity","cur","Grid","container","map","el","idx","length","style","backgroundColor","total","current","memo","ListOrderView","onAddItemClick","direction","items","url","state","title","onBookingClick","marginTop","listMenu","data","onClick","onSeeMoreClick","connect","getListSelectedSelector","dispatch","bindActionCreators","addListSelectedHandle","useDispatch","location","type","useState","page","size","listData","setListData","accessToken","useSelector","getAccessTokenSelector","useEffect","getListFoodsMenuHandle","branch_id","obj","tempListData","menu","addModal","MODAL_TYPE","MODAL_BOOKING_FOOD","order","FORCE_USER_LOGIN"],"mappings":"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","file":"static/js/16.3a274dec.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _defineProperty({\n      width: '100%',\n      marginLeft: 'auto',\n      boxSizing: 'border-box',\n      marginRight: 'auto',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      display: 'block'\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `disableGutters={true}`. */\n    disableGutters: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n\n    /* Styles applied to the root element if `fixed={true}`. */\n    fixed: Object.keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      var value = theme.breakpoints.values[breakpoint];\n\n      if (value !== 0) {\n        acc[theme.breakpoints.up(breakpoint)] = {\n          maxWidth: value\n        };\n      }\n\n      return acc;\n    }, {}),\n\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n    maxWidthXs: _defineProperty({}, theme.breakpoints.up('xs'), {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n    maxWidthSm: _defineProperty({}, theme.breakpoints.up('sm'), {\n      maxWidth: theme.breakpoints.values.sm\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\n    maxWidthMd: _defineProperty({}, theme.breakpoints.up('md'), {\n      maxWidth: theme.breakpoints.values.md\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n    maxWidthLg: _defineProperty({}, theme.breakpoints.up('lg'), {\n      maxWidth: theme.breakpoints.values.lg\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n    maxWidthXl: _defineProperty({}, theme.breakpoints.up('xl'), {\n      maxWidth: theme.breakpoints.values.xl\n    })\n  };\n};\nvar Container = /*#__PURE__*/React.forwardRef(function Container(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes[\"maxWidth\".concat(capitalize(String(maxWidth)))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);","import React from 'react';\nimport './selectedItem.scss';\nimport { CounterInput } from 'src/components/base';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { convertCurrency } from 'src/utils/currency';\nimport classNames from 'classnames';\n\nconst useStyles = makeStyles(() => {\n  return {\n    buttonCustom: {\n      height: '25px !important',\n    },\n  };\n});\n\nconst SelectedItem = (props) => {\n  const classes = useStyles();\n  const { item, borderNone, updateListSelectedHandle } = props;\n  console.log('🚀 ~ file: index.js ~ line 17 ~ SelectedItem ~ item', item);\n\n  const getQuantity = (quantity) => {\n    updateListSelectedHandle({ id: item.id, quantity });\n  };\n\n  return (\n    <div\n      className={classNames('selected-item-container', {\n        'border-none': borderNone,\n      })}\n    >\n      <p className=\"name-txt\">{item?.name}</p>\n      <p className=\"name-txt\">{convertCurrency(item?.price)} VNĐ</p>\n      <CounterInput\n        handleDecrement={() => {\n          if (item?.quantity > 0) {\n            getQuantity(item?.quantity - 1);\n          }\n        }}\n        handleIncrement={() => {\n          getQuantity(item?.quantity + 1);\n        }}\n        customStyle={classes.buttonCustom}\n        value={item?.quantity || null}\n      />\n    </div>\n  );\n};\n\nexport default SelectedItem;\n","/* eslint-disable no-return-assign */\n/* eslint-disable no-param-reassign */\nimport React from 'react';\nimport { convertCurrency } from 'src/utils/currency';\n\nimport './selectedComponent.scss';\nimport { Grid } from '@material-ui/core';\nimport SelectedItem from '../selectedItem';\nimport RequestModal from '../requestModal';\n\nconst SelectedComponent = (props) => {\n  const { listSelected, updateListSelectedHandle, branch } = props;\n  const totalQuantity = listSelected.reduce((acc, cur) => {\n    return (acc += cur.quantity);\n  }, 0);\n\n  return (\n    <div className=\"selected-component-container\">\n      <Grid container>\n        <p className=\"header-title\">ĐÃ CHỌN</p>\n        <Grid item lg={9} sm={12} xs={12}>\n          <div className=\"header-table\">\n            <p className=\"table-name  food_name_title\">Tên món</p>\n            <p className=\"table-name\">Đơn giá</p>\n            <p className=\"table-name\">Số lượng</p>\n          </div>\n\n          <div className=\"main-content-wrapper\">\n            <div className=\"main-content\">\n              {listSelected.map((el, idx) => (\n                <SelectedItem\n                  item={el}\n                  borderNone={listSelected.length === idx + 1}\n                  updateListSelectedHandle={updateListSelectedHandle}\n                />\n              ))}\n            </div>\n          </div>\n        </Grid>\n        <div className=\"divider_line\" />\n        <Grid item lg={3} sm={12} xs={12}>\n          <div className=\"request-container\">\n            <p className=\"title-request\">Số lượng</p>\n            <div className=\"row-section\">\n              <p className=\"quantity-txt\">Số món</p>\n              <p className=\"quantity-value\">x {listSelected.length}</p>\n            </div>\n            <div\n              style={{ width: '100%', height: '1px', backgroundColor: 'black' }}\n            />\n            <div className=\"row-section\">\n              <p className=\"quantity-txt\">Số phần</p>\n              <p className=\"quantity-value\">x {totalQuantity}</p>\n            </div>\n            <div\n              style={{ width: '100%', height: '1px', backgroundColor: 'black' }}\n            />\n            <div className=\"row-section\">\n              <p className=\"quantity-txt\">Tạm tính</p>\n              <p className=\"temp-total-money\">\n                {convertCurrency(\n                  listSelected.reduce((total, current) => {\n                    return total + current.price * current.quantity;\n                  }, 0)\n                )}{' '}\n                VNĐ\n              </p>\n            </div>\n            <div className=\"row-section\">\n              <p className=\"note-txt\">\n                Có thể phát sinh thêm chi phí trong quá trình sử dụng dịch vụ\n                tại nhà hàng\n              </p>\n            </div>\n            {/* <button onClick={onBookingClick}>ok</button> */}\n            <RequestModal listSelected={listSelected} branch={branch} />\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default React.memo(SelectedComponent);\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport { Grid, Container } from '@material-ui/core';\n\nimport {\n  TitleCustom,\n  Breadcrumb,\n  OrderDetail,\n  ButtonCustom,\n} from 'src/components/base';\n\nimport './ListOrder.scss';\nimport SelectedComponent from '../components/selectedComponent';\n\nconst ListOrderView = (props) => {\n  const { branch, onAddItemClick, updateListSelectedHandle } = props;\n\n  return (\n    <Grid container direction=\"column\" className=\"voucher-container\">\n      {/* <---E-Voucher-Section---> */}\n      <Breadcrumb\n        items={[\n          { name: 'Gọi món', url: '/order' },\n          { name: branch.name, url: `/order/${branch.id}`, state: { branch } },\n        ]}\n      />\n      {/* <Grid container lg={12} md={12} justifyContent=\"center\">\n        <Slider onClickSlider={() => {}} data={props.listBanner} />\n      </Grid> */}\n      <Container maxWidth=\"lg\">\n        <TitleCustom title={branch.name} customStyle=\"title-header\" />\n        {props.listSelected?.length > 0 ? (\n          <SelectedComponent\n            listSelected={props.listSelected}\n            updateListSelectedHandle={updateListSelectedHandle}\n            onBookingClick={props.onBookingClick}\n            branch={branch}\n          />\n        ) : null}\n      </Container>\n\n      <Container maxWidth=\"lg\">\n        <Grid\n          container\n          spacing={3}\n          direction=\"row\"\n          style={{ marginTop: '32px' }}\n        >\n          {props.listMenu?.data?.map((el) => (\n            <OrderDetail\n              onAddItemClick={onAddItemClick}\n              branch={branch}\n              item={el}\n              updateListSelectedHandle={updateListSelectedHandle}\n            />\n          ))}\n        </Grid>\n        {props.listMenu?.data.length < props.listMenu?.total && (\n          <Grid container className=\"box-button\">\n            <ButtonCustom\n              onClick={props.onSeeMoreClick}\n              item\n              title=\"XEM THÊM\"\n              customStyle=\"custom-button\"\n            />\n          </Grid>\n        )}\n      </Container>\n    </Grid>\n  );\n};\n\nexport default React.memo(ListOrderView);\n","/* eslint-disable no-plusplus */\nimport React, { useEffect, useState } from 'react';\n// import { useDispatch } from 'react-redux';\n// import { getListVoucherByTypeHandle } from 'src/redux/actions/voucher.action';\nimport { connect, useSelector, useDispatch } from 'react-redux';\nimport { getListSelectedSelector } from 'src/redux/selectors/order.selector';\nimport { getAccessTokenSelector } from 'src/redux/selectors/auth';\nimport { addModal } from 'src/redux/actions/ui.action';\nimport { bindActionCreators } from 'redux';\nimport {\n  addListSelectedHandle,\n  getListFoodsMenuHandle,\n  updateListSelectedHandle,\n} from 'src/redux/actions/order.action';\nimport { MODAL_TYPE } from 'src/constants';\nimport ListOrderView from './ListOrder.view';\n\nconst ListOrderContainer = (props) => {\n  const dispatch = useDispatch();\n  const branch = props?.location?.state?.branch || {};\n  const type = props?.location?.state?.type || {};\n  const [listData, setListData] = useState({ page: 1, size: 12, data: [] });\n  const accessToken = useSelector(getAccessTokenSelector);\n\n  const onBookingClick = () => {\n    if (accessToken) {\n      dispatch(\n        addModal({\n          type: MODAL_TYPE.MODAL_BOOKING_FOOD,\n          order: props.listSelected,\n        })\n      );\n    } else {\n      dispatch(\n        addModal({\n          type: MODAL_TYPE.FORCE_USER_LOGIN,\n          order: props.listSelected,\n        })\n      );\n    }\n  };\n  // const [listData, setListData] = useState({\n  //   data: [],\n  //   page: 1,\n  //   size: 9,\n  //   total: 0,\n  // });\n  // const dispatch = useDispatch();\n  useEffect(() => {\n    // const branch = props?.location?.state?.branch || {};\n    if (branch?.id) {\n      dispatch(\n        getListFoodsMenuHandle(\n          listData.page,\n          listData.size,\n          { ...type, branch_id: branch.id },\n          (obj) => {\n            const tempListData = {\n              ...listData,\n              data: obj.menu,\n              total: obj.total,\n            };\n\n            setListData(tempListData);\n          }\n        )\n      );\n    }\n  }, []);\n  console.log('branch', branch, props);\n\n  return (\n    <ListOrderView\n      branch={branch}\n      onBookingClick={onBookingClick}\n      listMenu={listData}\n      listSelected={props.listSelected}\n      {...props}\n      onAddItemClick={(data) => {\n        if (!accessToken) {\n          dispatch(\n            addModal({\n              type: MODAL_TYPE.FORCE_USER_LOGIN,\n              order: props.listSelected,\n            })\n          );\n        } else {\n          props.addListSelectedHandle(data);\n        }\n      }}\n      onSeeMoreClick={() => {\n        if (branch?.id) {\n          dispatch(\n            getListFoodsMenuHandle(\n              listData.page + 1,\n              listData.size,\n              { ...type, branch_id: branch.id },\n              (obj) => {\n                const tempListData = {\n                  ...listData,\n                  data: listData.data.concat(obj.menu),\n                  total: obj.total,\n                };\n\n                setListData(tempListData);\n              }\n            )\n          );\n        }\n      }}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  listSelected: getListSelectedSelector(state),\n});\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    { addListSelectedHandle, updateListSelectedHandle },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListOrderContainer);\n"],"sourceRoot":""}