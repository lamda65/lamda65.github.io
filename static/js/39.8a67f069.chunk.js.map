{"version":3,"sources":["modules/search/views/Search.view.js","modules/search/views/Search.container.js","modules/search/index.js"],"names":["SearchView","props","totalSearch","keyword","onLoadMore","history","useHistory","console","log","searchResults","className","total","Grid","style","margin","container","spacing","data","map","el","onItemClick","item","type_deal","push","id","eVoucher","length","xs","align","type","onClick","connect","state","suggestions","getSuggestionsSelector","getTotalSearchSelector","getKeywordSelector","dispatch","bindActionCreators","getVouchersBySearchHandle","useState","page","pageSize","setSearchResults","useEffect","result","concat","SearchContainer"],"mappings":"iPAmDeA,G,OA5CI,SAACC,GAC2BA,EAArCC,YADqB,IAAD,YACPC,EAAwBF,EAAxBE,QAASC,EAAeH,EAAfG,WACxBC,EAAUC,cAEhB,OADAC,QAAQC,IAAI,aAAcP,EAAMQ,eAE9B,sBAAKC,UAAU,0BAAf,UACE,qBAAKA,UAAU,eAAf,0BACS,UAAAT,EAAMQ,qBAAN,eAAqBE,QAAS,EADvC,+CAC6DR,KAE7D,sBAAKO,UAAU,wBAAf,UACE,cAACE,EAAA,EAAD,CAAMC,MAAO,CAAEC,OAAQ,UAAYC,WAAS,EAACC,QAAS,EAAtD,mBACGf,EAAMQ,qBADT,iBACG,EAAqBQ,YADxB,aACG,EAA2BC,KAAI,SAACC,GAC/B,OACE,cAAC,IAAD,CACEC,YAAa,SAACC,GACW,IAAnBA,EAAKC,WACPjB,EAAQkB,KAAR,mBAAyBF,EAAKG,KAET,IAAnBH,EAAKC,WACPjB,EAAQkB,KAAR,mBAAyBF,EAAKG,KAET,IAAnBH,EAAKC,WACPjB,EAAQkB,KAAR,oBAA0BF,EAAKG,MAInCC,UAAQ,EACRJ,KAAMF,GAFDA,EAAGK,UAOf,UAAAvB,EAAMQ,qBAAN,mBAAqBQ,YAArB,eAA2BS,SAA3B,UAAoCzB,EAAMQ,qBAA1C,aAAoC,EAAqBE,OACxD,cAACC,EAAA,EAAD,CAAMe,GAAI,GAAIC,MAAM,SAApB,SACE,wBAAQC,KAAK,SAASC,QAAS1B,EAAYM,UAAU,eAArD,2BAIA,aCkBGqB,eARS,SAACC,GAAD,MAAY,CAClCC,YAAaC,YAAuBF,GACpC9B,YAAaiC,YAAuBH,GACpC7B,QAASiC,YAAmBJ,OAEH,SAACK,GAAD,OACzBC,YAAmB,CAAEC,+BAA6BF,KAErCN,EApDS,SAAC9B,GAAW,IAAD,EACSuC,mBAAS,CACjDvB,KAAM,GACNwB,KAAM,EACNC,SAAU,KAJqB,mBAC1BjC,EAD0B,KACXkC,EADW,KAMjCC,qBAAU,WACJ3C,EAAME,SACRF,EAAMsC,0BAA0BtC,EAAME,QAAS,EAAG,IAAI,SAAC0C,GACrDF,EAAiB,CACf1B,KAAM4B,EAAO5B,KACbwB,KAAM,EACNC,SAAU,GACV/B,MAAOkC,EAAOlC,aAInB,CAACV,EAAME,UAkBV,OACE,cAAC,EAAD,2BACMF,GADN,IAEEQ,cAAeA,EACfL,WApBe,WACjBH,EAAMsC,0BACJtC,EAAME,QACNM,EAAcgC,KAAO,EACrB,IACA,SAACI,GACCF,EAAiB,CACf1B,KAAMR,EAAcQ,KAAK6B,OAAOD,EAAO5B,MACvCwB,KAAM,EACNC,SAAU,GACV/B,MAAOkC,EAAOlC,kBCtCToC","file":"static/js/39.8a67f069.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport { VoucherItem } from 'src/components/base';\nimport { Grid } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport './Search.scss';\n\nconst SearchView = (props) => {\n  const { totalSearch, keyword, onLoadMore } = props;\n  const history = useHistory();\n  console.log('SearchView', props.searchResults);\n  return (\n    <div className=\"search_result_container\">\n      <div className=\"title-search\">\n        {`Có ${props.searchResults?.total || 0} kết quả tìm kiếm ${keyword}`}\n      </div>\n      <div className=\"search_result_content\">\n        <Grid style={{ margin: '0 36px' }} container spacing={3}>\n          {props.searchResults?.data?.map((el) => {\n            return (\n              <VoucherItem\n                onItemClick={(item) => {\n                  if (item.type_deal === 1) {\n                    history.push(`/booking/${item.id}`);\n                  }\n                  if (item.type_deal === 2) {\n                    history.push(`/voucher/${item.id}`);\n                  }\n                  if (item.type_deal === 3) {\n                    history.push(`/delivery/${item.id}`);\n                  }\n                }}\n                key={el.id}\n                eVoucher\n                item={el}\n              />\n            );\n          })}\n        </Grid>\n        {props.searchResults?.data?.length < props.searchResults?.total ? (\n          <Grid xs={12} align=\"center\">\n            <button type=\"button\" onClick={onLoadMore} className=\"btn-see-more\">\n              Xem Thêm\n            </button>\n          </Grid>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default SearchView;\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport {\n  getSuggestionsSelector,\n  getTotalSearchSelector,\n  getKeywordSelector,\n} from 'src/redux/selectors/voucher.selector';\nimport { getVouchersBySearchHandle } from 'src/redux/actions/voucher.action';\nimport SearchView from './Search.view';\n\nconst SearchContainer = (props) => {\n  const [searchResults, setSearchResults] = useState({\n    data: [],\n    page: 1,\n    pageSize: 12,\n  });\n  useEffect(() => {\n    if (props.keyword) {\n      props.getVouchersBySearchHandle(props.keyword, 1, 12, (result) => {\n        setSearchResults({\n          data: result.data,\n          page: 1,\n          pageSize: 12,\n          total: result.total,\n        });\n      });\n    }\n  }, [props.keyword]);\n\n  const onLoadMore = () => {\n    props.getVouchersBySearchHandle(\n      props.keyword,\n      searchResults.page + 1,\n      12,\n      (result) => {\n        setSearchResults({\n          data: searchResults.data.concat(result.data),\n          page: 1,\n          pageSize: 12,\n          total: result.total,\n        });\n      }\n    );\n  };\n\n  return (\n    <SearchView\n      {...props}\n      searchResults={searchResults}\n      onLoadMore={onLoadMore}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  suggestions: getSuggestionsSelector(state),\n  totalSearch: getTotalSearchSelector(state),\n  keyword: getKeywordSelector(state),\n});\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators({ getVouchersBySearchHandle }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchContainer);\n","import SearchContainer from './views/Search.container';\n\nexport default SearchContainer;\n"],"sourceRoot":""}