{"version":3,"sources":["../node_modules/@material-ui/core/esm/Container/Container.js","modules/delivery/components/FoodItem/index.js","modules/delivery/components/categorySection/index.js","modules/delivery/views/listFoodDelivery/listFoodDelivery.view.js","modules/delivery/views/listFoodDelivery/listFoodDelivery.container.js"],"names":["Container","React","props","ref","classes","className","_props$component","component","Component","_props$disableGutters","disableGutters","_props$fixed","fixed","_props$maxWidth","maxWidth","other","_objectWithoutProperties","_extends","clsx","root","concat","capitalize","String","withStyles","theme","_defineProperty","width","marginLeft","boxSizing","marginRight","paddingLeft","spacing","paddingRight","display","breakpoints","up","Object","keys","values","reduce","acc","breakpoint","value","maxWidthXs","Math","max","xs","maxWidthSm","sm","maxWidthMd","md","maxWidthLg","lg","maxWidthXl","xl","name","FoodItem","item","history","useHistory","src","image_urls","length","style","objectFit","alt","merchant","image_url","price","convertCurrency","title","icon","customTitle","onClick","push","id","CategorySection","index","listData","branch","addListSelectedHandle","onVisibleSelected","updateListSelectedHandle","seeAllHandle","Grid","container","map","el","ListFoodDeliveryView","listMenu","listSelected","items","url","state","Box","marginTop","idx","data","memo","menuTypes","group","total","type","is_new","is_drink","connect","getListSelectedSelector","dispatch","bindActionCreators","useDispatch","accessToken","useSelector","getAccessTokenSelector","useState","setListMenu","isSuccess","isVisibleSelected","thisState","setThisState","useEffect","console","log","location","i","getListFoodsDeliveryHandle","delivery_group","is_delivery","merchant_id","obj","menu","temp","onBookingClick","addModal","MODAL_TYPE","MODAL_BOOKING_FOOD","order","FORCE_USER_LOGIN","menuType"],"mappings":"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","file":"static/js/15.38582f82.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _defineProperty({\n      width: '100%',\n      marginLeft: 'auto',\n      boxSizing: 'border-box',\n      marginRight: 'auto',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      display: 'block'\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `disableGutters={true}`. */\n    disableGutters: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n\n    /* Styles applied to the root element if `fixed={true}`. */\n    fixed: Object.keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      var value = theme.breakpoints.values[breakpoint];\n\n      if (value !== 0) {\n        acc[theme.breakpoints.up(breakpoint)] = {\n          maxWidth: value\n        };\n      }\n\n      return acc;\n    }, {}),\n\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n    maxWidthXs: _defineProperty({}, theme.breakpoints.up('xs'), {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n    maxWidthSm: _defineProperty({}, theme.breakpoints.up('sm'), {\n      maxWidth: theme.breakpoints.values.sm\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\n    maxWidthMd: _defineProperty({}, theme.breakpoints.up('md'), {\n      maxWidth: theme.breakpoints.values.md\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n    maxWidthLg: _defineProperty({}, theme.breakpoints.up('lg'), {\n      maxWidth: theme.breakpoints.values.lg\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n    maxWidthXl: _defineProperty({}, theme.breakpoints.up('xl'), {\n      maxWidth: theme.breakpoints.values.xl\n    })\n  };\n};\nvar Container = /*#__PURE__*/React.forwardRef(function Container(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes[\"maxWidth\".concat(capitalize(String(maxWidth)))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);","import React from 'react';\nimport './FoodItem.scss';\nimport { ButtonCustom } from 'src/components/base';\nimport { CartIconWhite, SymbolCurrencyIcon } from 'src/assets/icons';\nimport { Grid } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport { convertCurrency } from 'src/utils/currency';\n\nconst FoodItem = (props) => {\n  const { item = {} } = props;\n  const history = useHistory();\n  return (\n    <Grid item xl={4} lg={4} md={6} sm={6} xs={12}>\n      <div className=\"food-item-container\">\n        <div className=\"image-section\">\n          <div className=\"box-img\">\n            <img\n              src={\n                item.image_urls &&\n                item.image_urls.length > 0 &&\n                item.image_urls[0]\n              }\n              style={{ objectFit: 'cover' }}\n              alt=\"order-detail\"\n            />\n            <img src={item?.merchant?.image_url} alt=\"logo\" className=\"logo\" />\n          </div>\n        </div>\n\n        <div className=\"content-section\">\n          <p className=\"eVoucher-name\">{item.name}</p>\n\n          <div className=\"bottom-section\">\n            <div className=\"bottom-left\">\n              <div className=\"bottom-left\">\n                {!!item.price && (\n                  <div className=\"price-section\">\n                    <SymbolCurrencyIcon />\n                    <p className=\"price\">{convertCurrency(item.price)}đ</p>\n                  </div>\n                )}\n              </div>\n            </div>\n            <div className=\"bottom-right\">\n              <ButtonCustom\n                title=\"Chọn\"\n                icon={<CartIconWhite />}\n                customTitle=\"customTitle\"\n                onClick={() => {\n                  history.push(`/delivery/${item.id}`);\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Grid>\n  );\n};\n\nexport default FoodItem;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport './categorySection.scss';\nimport { Grid } from '@material-ui/core';\nimport { ArrowRightGold } from 'src/assets/icons';\nimport FoodItem from '../FoodItem';\n\nconst CategorySection = (props) => {\n  const {\n    index,\n    title,\n    listData,\n    branch,\n    addListSelectedHandle,\n    onVisibleSelected,\n    updateListSelectedHandle,\n    seeAllHandle,\n  } = props;\n  return (\n    <Grid container lg={12} className=\"category-section\">\n      <div className=\"header\">\n        <p className=\"category-title\">{title}</p>\n        <a onClick={() => seeAllHandle(index)} className=\"see-all\">\n          <p className=\"see-all-txt\">Xem tất cả</p>\n          <ArrowRightGold />\n        </a>\n      </div>\n\n      <Grid container lg={12} spacing={3}>\n        {listData.map((el) => (\n          <FoodItem\n            item={el}\n            branch={branch}\n            addListSelectedHandle={addListSelectedHandle}\n            onVisibleSelected={onVisibleSelected}\n            updateListSelectedHandle={updateListSelectedHandle}\n          />\n        ))}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default CategorySection;\n","import React from 'react';\nimport './listFoodDelivery.scss';\nimport { Box, Container, Grid } from '@material-ui/core';\nimport { Breadcrumb, TitleCustom } from 'src/components/base';\nimport CategorySection from '../../components/categorySection';\n\nconst ListFoodDeliveryView = (props) => {\n  const {\n    merchant,\n    listMenu,\n    onVisibleSelected,\n    addListSelectedHandle,\n    updateListSelectedHandle,\n    listSelected,\n    seeAllHandle,\n  } = props;\n\n  return (\n    <div className=\"order-detail-wrapper\">\n      <Breadcrumb\n        items={[\n          { name: 'Delivery', url: '/delivery' },\n          {\n            name: merchant.name,\n            url: `/delivery/merchant/${merchant.id}`,\n            state: { merchant },\n          },\n        ]}\n      />\n      <Grid container>\n        <Container maxWidth=\"lg\" className=\"order-detail-container\">\n          <Box style={{ marginTop: '30px' }}>\n            <TitleCustom title={merchant.name} />\n          </Box>\n          {/* {thisState.isVisibleSelected ? (\n            <SelectedComponent\n              listSelected={listSelected}\n              updateListSelectedHandle={updateListSelectedHandle}\n              onBookingClick={onBookingClick}\n              branch={branch}\n            />\n          ) : null} */}\n\n          <div>\n            {listMenu.map((el, idx) => (\n              <CategorySection\n                index={idx}\n                merchant={merchant}\n                title={el.name}\n                listData={listMenu[idx].data}\n                onVisibleSelected={onVisibleSelected}\n                listSelected={listSelected}\n                addListSelectedHandle={addListSelectedHandle}\n                updateListSelectedHandle={updateListSelectedHandle}\n                seeAllHandle={seeAllHandle}\n              />\n            ))}\n          </div>\n        </Container>\n      </Grid>\n    </div>\n  );\n};\n\nexport default React.memo(ListFoodDeliveryView);\n","/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable no-plusplus */\nimport React, { useState, useEffect } from 'react';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport {\n  addListSelectedHandle,\n  updateListSelectedHandle,\n} from 'src/redux/actions/order.action';\nimport { getListFoodsDeliveryHandle } from 'src/redux/actions/delivery.action';\n\nimport { getListSelectedSelector } from 'src/redux/selectors/order.selector';\nimport { bindActionCreators } from 'redux';\nimport { addModal } from 'src/redux/actions/ui.action';\nimport { MODAL_TYPE } from 'src/constants';\nimport { useHistory } from 'react-router-dom';\nimport { getAccessTokenSelector } from 'src/redux/selectors/auth';\nimport ListFoodDeliveryView from './listFoodDelivery.view';\n\nconst menuTypes = [\n  {\n    id: '01',\n    group: 'BAN_CHAY',\n    name: 'Món bán chạy',\n    data: [],\n    total: 0,\n  },\n  {\n    id: '02',\n    type: { is_new: true },\n    name: 'Món mới',\n    group: 'MON_MOI',\n    data: [],\n    total: 0,\n  },\n  {\n    id: '03',\n    type: { is_drink: true },\n    name: 'Đồ uống',\n    group: 'DO_UONG',\n    data: [],\n    total: 0,\n  },\n];\n\nconst DeliveryDetailContainer = (props) => {\n  const dispatch = useDispatch();\n  const accessToken = useSelector(getAccessTokenSelector);\n  const [listMenu, setListMenu] = useState(menuTypes);\n  const [thisState, setThisState] = useState({\n    isSuccess: false,\n    isVisibleSelected: false,\n  });\n  const history = useHistory();\n\n  useEffect(() => {\n    console.log('DeliveryDetailContainer>>>>>');\n    const merchant = props?.location?.state?.merchant || {};\n    for (let i = 0; i < menuTypes.length; i++) {\n      dispatch(\n        getListFoodsDeliveryHandle(\n          1,\n          6,\n          {\n            delivery_group: menuTypes[i].group,\n            is_delivery: true,\n            merchant_id: merchant.id,\n          },\n          (obj) => {\n            const { menu, total } = obj;\n            const temp = [...listMenu];\n\n            temp[i].data = menu;\n            temp[i].total = total;\n\n            setListMenu(temp);\n          }\n        )\n      );\n    }\n  }, []);\n  const merchant = props?.location?.state?.merchant || {};\n\n  const seeAllHandle = (index) => {\n    history.push(`/delivery/see-all/${menuTypes[index].id}`, {\n      merchant,\n      menuType: menuTypes[index],\n    });\n  };\n\n  const onVisibleSelected = () => {\n    setThisState({\n      ...thisState,\n      isVisibleSelected: true,\n    });\n  };\n\n  const onBookingClick = () => {\n    if (accessToken) {\n      dispatch(\n        addModal({\n          type: MODAL_TYPE.MODAL_BOOKING_FOOD,\n          order: props.listSelected,\n        })\n      );\n    } else {\n      dispatch(\n        addModal({\n          type: MODAL_TYPE.FORCE_USER_LOGIN,\n          order: props.listSelected,\n        })\n      );\n    }\n  };\n\n  return (\n    <ListFoodDeliveryView\n      merchant={merchant}\n      thisState={thisState}\n      listMenu={listMenu}\n      onVisibleSelected={onVisibleSelected}\n      onBookingClick={onBookingClick}\n      seeAllHandle={seeAllHandle}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  listSelected: getListSelectedSelector(state),\n});\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    { addListSelectedHandle, updateListSelectedHandle },\n    dispatch\n  );\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DeliveryDetailContainer);\n"],"sourceRoot":""}